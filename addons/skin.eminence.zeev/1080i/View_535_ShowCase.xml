<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_535_ShowCase">

	<control type="grouplist">
			<visible>!Window.IsVisible(2003)</visible>
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,0)</visible>
			<posx>640</posx>
			<top>910</top>
			<include>Animation.FadeIn</include>
			<include>Animation.FadeOut</include>
			<right>20</right>
			<centertop>810</centertop>
			<centerleft>810</centerleft>
			<height>64</height>
			<orientation>horizontal</orientation>
			<align>left</align>
			<itemgap>24</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
						<animation effect="fade" start="100" end="0" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>			
			<animation effect="fade" start="0" end="100" delay="450" time="250" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="Window.IsVisible(106)">Conditional</animation>
			<control type="label">
				<width>auto</width>
				<height>64</height>
				<align>left</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Rating]</label>
				<font>Flag</font>
				<textcolor>PanelFG-NF</textcolor>
			</control>
			<control type="image">
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="PanelFG-NF">flags/$VAR[Flagstar1].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="PanelFG-NF">flags/$VAR[Flagstar2].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="PanelFG-NF">flags/$VAR[Flagstar3].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="PanelFG-NF">flags/$VAR[Flagstar4].png</texture>
			</control>
			<control type="image">
				<posx>-48</posx>
				<width>64</width>
				<height>64</height>
				<texture colordiffuse="PanelFG-NF">flags/$VAR[Flagstar5].png</texture>
			</control>

		</control>
		<!-- רקע -->
		<control type="image">
			<posx>-80</posx>
			<posy>100</posy>
			<width>1695</width>
			<height>460</height>
			<texture colordiffuse="infobg" border="5">music/music3.png</texture>
			<animation effect="fade" end="60" condition="true">Conditional</animation>
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>
						<animation effect="fade" start="100" end="0" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>			
			<animation effect="fade" start="0" end="100" delay="450" time="250" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="Window.IsVisible(106)">Conditional</animation>
		</control>
		
		<control type="grouplist">
			<visible>!Window.IsVisible(2003)</visible>

			<left>130</left>
			<right>SidePad</right>
			<top>180</top>
			<orientation>vertical</orientation>
			<visible>![Container(535).OnNext | Container(535).OnPrevious]</visible>
			<animation effect="fade" start="0" end="100" delay="450" time="250" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="Window.IsVisible(106)">Conditional</animation>

			<control type="label">
				<font>SmallBold</font>
				<label></label>
				<textcolor>white</textcolor>
				<height>35</height>
				<aligny>top</aligny>
				<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

			</control>
			<control type="label">
				<font>Tiny</font>
				<label></label>
				<textcolor>white</textcolor>
				<height>42</height>
				<aligny>top</aligny>
				<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

			</control>
			<control type="textbox">
				<font>Tiny</font>
				<label>$VAR[PlotBox]</label>
				<textcolor>white</textcolor>
				<height>150</height>
				<width>1300</width>
				<align>center</align>
				<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

			</control>

		</control>

		<control type="group">
			<animation effect="fade" condition="!Control.HasFocus(60)" time="200" start="100" end="0">Conditional</animation>
			<include>Furniture_Scrollbar_Horizontal</include>
		</control>

		<control type="image">
			<posx>640</posx>
			<posy>750</posy>
			<width>250</width>
			<height>250</height>
			<texture background="true" >$INFO[ListItem.Art(clearlogo)]</texture>
			<aspectratio>keep</aspectratio>
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

		</control>


		<control type="label">
			<visible>!Window.IsVisible(2003)</visible>

			<posx>-200</posx>
			<posy>180</posy>
			<font>Font-DialogHeader</font>
			<label>$INFO[ListItem.Label]</label>
			<textcolor>white</textcolor>
			<height>35</height>
			<aligny>top</aligny>
			<align>center</align>
			<animation effect="fade" start="100" end="0" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>			
			<animation effect="fade" start="0" end="100" delay="450" time="250" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="Window.IsVisible(106)">Conditional</animation>
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

		</control>




		<control type="label">
			<visible>!Window.IsVisible(2003)</visible>

		<posx>-1700</posx>
			<posy>400</posy>
			<font>font13</font>
			<label>$INFO[ListItem.Year]</label>
			<textcolor>white</textcolor>
			<height>35</height>
			<aligny>top</aligny>
			<align>center</align>
			<animation effect="fade" start="100" end="0" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>			
			<animation effect="fade" start="0" end="100" delay="450" time="250" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="Window.IsVisible(106)">Conditional</animation>
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

		</control>

		<control type="label">
			<visible>!Window.IsVisible(2003)</visible>

				<posx>-1500</posx>
			<posy>400</posy>
			<font>font13</font>
			<label>$INFO[Window(Home).Property(SkinHelper.ListItemDuration)]</label>
			<textcolor>white</textcolor>
			<height>35</height>
			<aligny>top</aligny>
			<align>center</align>
			<animation effect="fade" start="100" end="0" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>			
			<animation effect="fade" start="0" end="100" delay="450" time="250" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="Window.IsVisible(106)">Conditional</animation>
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

		</control>

		<control type="label">
			<visible>!Window.IsVisible(2003)</visible>

			<posx>-200</posx>
			<posy>220</posy>
			<font>font13</font>
			<label>$INFO[ListItem.Genre]</label>
			<textcolor>white</textcolor>
			<height>35</height>
			<aligny>top</aligny>
			<align>center</align>
			<animation effect="fade" start="100" end="0" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>			
			<animation effect="fade" start="0" end="100" delay="450" time="250" reversible="false">Visible</animation>
			<animation effect="fade" start="100" end="0" time="250" condition="Window.IsVisible(106)">Conditional</animation>
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

		</control>

		<control type="group">
			<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>
			<top>-150</top>
			<left>-200</left>
							<animation effect="slide" start="10" end="-200" time="250" condition="Window.IsVisible(106)">Conditional</animation>
			<animation effect="slide" start="10" end="-200" time="250" condition="ControlGroup(9000).HasFocus() | Control.HasFocus(9101)">Conditional</animation>
			<animation effect="slide" tween="cubic" time="720" start="0,1080" end="0,0">VisibleChange</animation>
			<control type="group">
				<camera x="960" y="810" />
				<control type="group" id="6001">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnNext</visible>
					<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnNext</visible>
						<scale>true</scale>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>825</left>
							<visible>Container.OnNext</visible>
							<visible>!IsEmpty(Container(535).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!IsEmpty(Container(535).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay-1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6002">
					<left>55</left>
					<top>570</top>
					<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,0)</visible>

					<visible>Container.OnPrevious</visible>
					<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(7).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>690</left>
							<visible>Container.OnPrevious</visible>
							<visible>!IsEmpty(Container(535).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>!IsEmpty(Container(535).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay1Var]</texture>
							</control>
							<control type="group">
								<left>28</left>
								<top>22</top>
								<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6000">
					<left>55</left>
					<top>570</top>
					<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,1)</visible>

					<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002)</visible>
					<control type="group">
						<left>15</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>150</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>285</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>420</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>555</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>690</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(-1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>1500</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(6).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1365</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(5).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1230</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(4).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1095</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(3).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>960</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(2).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>825</left>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(1).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<left>758</left>
						<!-- Workaround for camera bug. As soon as the camera tag is applied to the group, label will be invisible -->
						<animation effect="rotatey" center="0" start="1" end="1" time="0" condition="true">Conditional</animation>
						<visible>!IsEmpty(Container(535).ListItemNoWrap(0).FolderPath) | !Skin.HasSetting(HorizontalListNav)</visible>
						<include>MovieShowCaseItem0</include>
					</control>
				</control>
			</control>
			<include condition="Skin.HasSetting(HorizontalListNav)">scmfixed</include>
			<include condition="!Skin.HasSetting(HorizontalListNav)">scmwrap</include>

		</control>
	</include>

	<include name="scmfixed">
		<control type="fixedlist" id="535">
			<include>contents53list</include>
		</control>
	</include>
	<include name="scmwrap">
		<control type="wraplist" id="535">
			<include>contents53list</include>
		</control>
	</include>
	<include name="contents53list">
		<left>-69</left>
		<top>540</top>
		<width>2058</width>
		<height>525</height>
		<onleft>535</onleft>
		<onright>535</onright>
										<onup condition="Player.HasAudio | Player.HasVideo">9103</onup>

		<onup>62</onup>
		<ondown>61</ondown>
		
		<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(musicvideos) | Container.Content(seasons) | Container.Content(genres) | Container.Content(sets)</visible>
		<viewtype label="31343704">bigwrap</viewtype>
		<pagecontrol>61</pagecontrol>
		<scrolltime tween="quadratic">300</scrolltime>
		<focusposition>3</focusposition>
		<orientation>horizontal</orientation>
		<preloaditems>2</preloaditems>
		<itemlayout height="525" width="260" />
		<focusedlayout height="525" width="260" />
	</include>
	<include name="MovieShowcaseThumb">
		<left>-4</left>
		<top>-16</top>
		<width>320</width>
		<height>440</height>
		<align>center</align>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<fadetime>100</fadetime>
		<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
		<bordersize>20</bordersize>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</include>
	<include name="MovieShowcaseThumbReflection">
		<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
		<fadetime>100</fadetime>
		<left>16</left>
		<top>400</top>
		<width>264</width>
		<height>396</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</include>
	<include name="WatchedOverlayShowCase">
		<left>180</left>
		<top>-16</top>
		<width>120</width>
		<height>120</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowCaseItem-7">
		<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,0)</visible>

		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumb</include>
			<visible>IntegerGreaterThan(Container.NumItems,0)</visible>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-7</include>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem-6">
		<control type="image">
			<texture background="true" diffuse="diffuse/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-6</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>121</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem-5">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-5</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>131</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem-4">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-4</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>145</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem-3">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-3</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>160</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem-2">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-2</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>179</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem-1">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay-1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>180</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem0">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay0Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon0</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem1">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay1Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>86</left>
			<width>192</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay2Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>102</left>
			<width>177</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay3Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>121</left>
			<width>158</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay4Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>136</left>
			<width>144</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay5Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>148</left>
			<width>133</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay6Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>158</left>
			<width>122</width>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumb</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay7Var]</texture>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

		</control>
	</include>
	<variable name="ShowcaseItem-7Var">
		<value condition="!IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-7).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="!IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-6).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="!IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="!IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="!IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="!IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem-1Var">
		<value condition="!IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem0Var">
			  	<value condition="!IsEmpty(Window(Home).Property(SkinHelper.AnimatedPoster) + !Skin.HasSetting(showanimate.poster)">$INFO[Window(Home).Property(SkinHelper.AnimatedPoster)]</value>
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem.Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="!IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(1).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="!IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(2).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="!IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(3).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="!IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(4).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="!IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(5).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="!IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(6).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="!IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(7).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="!IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(8).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="!IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(9).Icon]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay-1Var">
		<value condition="ListItem(-1).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(-1).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay0Var">
		<value condition="ListItem.IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem.Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay1Var">
		<value condition="ListItem(1).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(1).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay2Var">
		<value condition="ListItem(2).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(2).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay3Var">
		<value condition="ListItem(3).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(3).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay4Var">
		<value condition="ListItem(4).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(4).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay5Var">
		<value condition="ListItem(5).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(5).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay6Var">
		<value condition="ListItem(6).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(6).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay7Var">
		<value condition="ListItem(7).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(7).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay8Var">
		<value condition="ListItem(8).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(8).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<variable name="IconOverlay9Var">
		<value condition="ListItem(9).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(9).Overlay]</value>
					<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

	</variable>
	<include name="UnwatchedIconCircle">
		<control type="image">
			<width>36</width>
			<height>36</height>
			<aspectratio>keep</aspectratio>
			<texture>circle.png</texture>
		</control>
	</include>
	<include name="UnwatchedIconVars">
		<top>2</top>
		<width>36</width>
		<height>36</height>
		<align>center</align>
		<aligny>top</aligny>
		<font>font10</font>
		<textcolor>FF000000</textcolor>
		<scroll>false</scroll>
	</include>
	<include name="UnwatchedIcon">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
						<visible>IntegerGreaterThan(Container.NumItems,0)</visible>

			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon0">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-2">
		<visible>Control.IsVisible(535) + IntegerGreaterThan(Container.NumItems,0)</visible>

		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-3">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-4">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-5">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-6">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-7">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
</includes>